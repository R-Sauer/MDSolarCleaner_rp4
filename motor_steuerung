try:
 import RPi.GPIO as GPIO
except ImportError:
 import SimulRPi.GPIO as GPIO
#import RPi.GPIO as GPIO
# GPIO-Pins für die Motorsteuerung
motor_pwm_pin_1 = 18 # PWM-Pin für Motor 1 Geschwindigkeitssteuerung
motor_dir_pin_1_1 = 23 # Richtungspin 1 für Motor 1
motor_dir_pin_2_1 = 24 # Richtungspin 2 für Motor 1
motor_pwm_pin_2 = 25 # PWM-Pin für Motor 2 Geschwindigkeitssteuerung
motor_dir_pin_1_2 = 8 # Richtungspin 1 für Motor 2
motor_dir_pin_2_2 = 7 # Richtungspin 2 für Motor 2
# Initialisierung der GPIO-Pins
GPIO.setmode(GPIO.BCM)
GPIO.setup(motor_pwm_pin_1, GPIO.OUT)
GPIO.setup(motor_dir_pin_1_1, GPIO.OUT)
GPIO.setup(motor_dir_pin_2_1, GPIO.OUT)
GPIO.setup(motor_pwm_pin_2, GPIO.OUT)
GPIO.setup(motor_dir_pin_1_2, GPIO.OUT)
GPIO.setup(motor_dir_pin_2_2, GPIO.OUT)
# PWM-Objekte für die Geschwindigkeitssteuerung der beiden Motoren
pwm_motor_1 = GPIO.PWM(motor_pwm_pin_1, 100) # 100 Hz PWM
pwm_motor_2 = GPIO.PWM(motor_pwm_pin_2, 100) # 100 Hz PWM
# Funktion zur Steuerung der Geschwindigkeit und Richtung beider Motoren
def motor_control(speed_1, direction_1, speed_2, direction_2):
 # Geschwindigkeitseinstellungen
 pwm_motor_1.start(speed_1)
 pwm_motor_2.start(speed_2)
 # Richtungseinstellungen
 GPIO.output(motor_dir_pin_1_1, direction_1)
 GPIO.output(motor_dir_pin_2_1, not direction_1)
 GPIO.output(motor_dir_pin_1_2, direction_2)
 GPIO.output(motor_dir_pin_2_2, not direction_2)
# Beispielanwendung
try:
 while True:
 speed_1 = float(input("Geben Sie die Geschwindigkeit für Motor 1 ein (0-100): "))
 direction_1 = int(input("Geben Sie die Richtung für Motor 1 ein (0 für vorwärts, 1 für 
rückwärts): "))
 speed_2 = float(input("Geben Sie die Geschwindigkeit für Motor 2 ein (0-100): "))
 direction_2 = int(input("Geben Sie die Richtung für Motor 2 ein (0 für vorwärts, 1 für 
rückwärts): "))
 # Geschwindigkeit und Richtung der beiden Motoren steuern
 motor_control(speed_1, direction_1, speed_2, direction_2)
except KeyboardInterrupt:
 pass
finally:
 # Programm beenden und GPIO-Pins freigeben
 pwm_motor_1.stop()
 pwm_motor_2.stop()
 GPIO.cleanup()
